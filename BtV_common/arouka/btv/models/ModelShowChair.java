// Date: 6/2/2014 7:48:41 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package arouka.btv.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelShowChair extends ModelBase
{
  //fields
    ModelRenderer legBackLeft;
    ModelRenderer legBackRight;
    ModelRenderer legFrontLeft;
    ModelRenderer legFrontRight;
    ModelRenderer seatBase;
    ModelRenderer seatBack;
    ModelRenderer beamFront;
    ModelRenderer beamBack;
    ModelRenderer beamLeft;
    ModelRenderer beamRight;
  
  public ModelShowChair()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      legBackLeft = new ModelRenderer(this, 0, 15);
      legBackLeft.addBox(-1F, -4.5F, 11F, 2, 9, 2);
      legBackLeft.setRotationPoint(-6F, 19.5F, -6F);
      legBackLeft.setTextureSize(64, 32);
      legBackLeft.mirror = true;
      setRotation(legBackLeft, 0F, 0F, 0F);
      legBackRight = new ModelRenderer(this, 8, 15);
      legBackRight.addBox(-1F, -4.5F, -1F, 2, 9, 2);
      legBackRight.setRotationPoint(6F, 19.5F, 6F);
      legBackRight.setTextureSize(64, 32);
      legBackRight.mirror = true;
      setRotation(legBackRight, 0F, 0F, 0F);
      legFrontLeft = new ModelRenderer(this, 16, 15);
      legFrontLeft.addBox(-1F, -4.5F, -1F, 2, 9, 2);
      legFrontLeft.setRotationPoint(-6F, 19.5F, -6F);
      legFrontLeft.setTextureSize(64, 32);
      legFrontLeft.mirror = true;
      setRotation(legFrontLeft, 0F, 0F, 0F);
      legFrontRight = new ModelRenderer(this, 24, 15);
      legFrontRight.addBox(-1F, -4.5F, -1F, 2, 9, 2);
      legFrontRight.setRotationPoint(6F, 19.5F, -6F);
      legFrontRight.setTextureSize(64, 32);
      legFrontRight.mirror = true;
      setRotation(legFrontRight, 0F, 0F, 0F);
      seatBase = new ModelRenderer(this, 0, 0);
      seatBase.addBox(-7F, -0.5F, -7F, 14, 1, 14);
      seatBase.setRotationPoint(0F, 14.5F, 0F);
      seatBase.setTextureSize(64, 32);
      seatBase.mirror = true;
      setRotation(seatBase, 0F, 0F, 0F);
      seatBack = new ModelRenderer(this, 32, 15);
      seatBack.addBox(-7F, -6.5F, -0.5F, 14, 13, 1);
      seatBack.setRotationPoint(0F, 7.5F, 6.5F);
      seatBack.setTextureSize(64, 32);
      seatBack.mirror = true;
      setRotation(seatBack, 0F, 0F, 0F);
      beamFront = new ModelRenderer(this, 0, 26);
      beamFront.addBox(-5F, -0.5F, -1F, 10, 1, 2);
      beamFront.setRotationPoint(0F, 18F, -6F);
      beamFront.setTextureSize(64, 32);
      beamFront.mirror = true;
      setRotation(beamFront, 0F, 0F, 0F);
      beamBack = new ModelRenderer(this, 0, 29);
      beamBack.addBox(-4F, -0.5F, -1F, 10, 1, 2);
      beamBack.setRotationPoint(-1F, 18F, 6F);
      beamBack.setTextureSize(64, 32);
      beamBack.mirror = true;
      setRotation(beamBack, 0F, 0F, 0F);
      beamLeft = new ModelRenderer(this, 16, 0);
      beamLeft.addBox(-1F, -0.5F, -5F, 2, 1, 10);
      beamLeft.setRotationPoint(-6F, 18F, 0F);
      beamLeft.setTextureSize(64, 32);
      beamLeft.mirror = true;
      setRotation(beamLeft, 0F, 0F, 0F);
      beamRight = new ModelRenderer(this, 16, 0);
      beamRight.addBox(-1F, -0.5F, -5F, 2, 1, 10);
      beamRight.setRotationPoint(6F, 18F, 0F);
      beamRight.setTextureSize(64, 32);
      beamRight.mirror = true;
      setRotation(beamRight, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    legBackLeft.render(f5);
    legBackRight.render(f5);
    legFrontLeft.render(f5);
    legFrontRight.render(f5);
    seatBase.render(f5);
    seatBack.render(f5);
    beamFront.render(f5);
    beamBack.render(f5);
    beamLeft.render(f5);
    beamRight.render(f5);
  }
  
  public void rendermodel(float f){
	    legBackLeft.render(f);
	    legBackRight.render(f);
	    legFrontLeft.render(f);
	    legFrontRight.render(f);
	    seatBase.render(f);
	    seatBack.render(f);
	    beamFront.render(f);
	    beamBack.render(f);
	    beamLeft.render(f);
	    beamRight.render(f);	  
	  
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}
